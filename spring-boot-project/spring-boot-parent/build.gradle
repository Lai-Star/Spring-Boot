plugins {
	id "org.springframework.boot.bom"
	id "org.springframework.boot.conventions"
	id "org.springframework.boot.deployed"
}

description = "Spring Boot Parent"

bom {
	upgrade {
		policy = "same-major-version"
		gitHub {
			issueLabels = ["type: task"]
		}
	}
	library("Android JSON", "0.0.20131108.vaadin1") {
		group("com.vaadin.external.google") {
			modules = [
				"android-json"
			]
		}
	}
	library("API Guardian", "1.1.2") {
		group("org.apiguardian") {
			modules = [
				"apiguardian-api"
			]
		}
	}
	library("C3P0", "0.9.5.5") {
		group("com.mchange") {
			modules = [
				"c3p0"
			]
		}
	}
	library("Commons Compress", "1.23.0") {
		group("org.apache.commons") {
			modules = [
				"commons-compress"
			]
		}
	}
	library("Commons FileUpload", "1.5") {
		group("commons-fileupload") {
			modules = [
				"commons-fileupload"
			]
		}
	}
	library("Jakarta Inject", "2.0.1") {
		group("jakarta.inject") {
			modules = [
				"jakarta.inject-api"
			]
		}
	}
	library("Janino", "3.1.10") {
		group("org.codehaus.janino") {
			imports = [
				"janino"
			]
		}
	}
	library("JLine", "2.11") {
		prohibit {
			versionRange "[2.12,)"
			because "it contains breaking changes"
		}
		group("jline") {
			modules = [
				"jline"
			]
		}
	}
	library("JNA", "5.13.0") {
		group("net.java.dev.jna") {
			modules = [
				"jna-platform"
			]
		}
	}
	library("JOpt Simple", "5.0.4") {
		group("net.sf.jopt-simple") {
			modules = [
				"jopt-simple"
			]
		}
	}
	library("Maven", "${mavenVersion}") {
		group("org.apache.maven") {
			modules = [
				"maven-core",
				"maven-model-builder",
				"maven-plugin-api",
				"maven-resolver-provider"
			]
		}
	}
	library("Maven Common Artifact Filters", "3.3.2") {
		group("org.apache.maven.shared") {
			modules = [
				"maven-common-artifact-filters"
			]
		}
	}
	library("Maven Invoker", "3.2.0") {
		group("org.apache.maven.shared") {
			modules = [
				"maven-invoker"
			]
		}
	}
	library("Maven Plugin Tools", "3.9.0") {
		group("org.apache.maven.plugin-tools") {
			modules = [
				"maven-plugin-annotations"
			]
		}
	}
	library("Maven Resolver", "1.9.14") {
		group("org.apache.maven.resolver") {
			modules = [
				"maven-resolver-api",
				"maven-resolver-connector-basic",
				"maven-resolver-impl",
				"maven-resolver-spi",
				"maven-resolver-transport-file",
				"maven-resolver-transport-http",
				"maven-resolver-util"
			]
		}
	}
	library("Maven Shade Plugin", "3.5.0") {
		group("org.apache.maven.plugins") {
			modules = [
				"maven-shade-plugin"
			]
		}
	}
	library("Micrometer Context Propagation", "1.0.5") {
		group("io.micrometer") {
			modules = [
				"context-propagation"
			]
		}
	}
	library("MockK", "1.13.5") {
		group("io.mockk") {
			modules = [
				"mockk"
			]
		}
	}
	library("Native Gradle Plugin", "${nativeBuildToolsVersion}") {
		group("org.graalvm.buildtools") {
			modules = [
				"native-gradle-plugin"
			]
		}
	}
	library("Plexus Build API", "0.0.7") {
		group("org.sonatype.plexus") {
			modules = [
				"plexus-build-api"
			]
		}
	}
	library("Plexus Sec Dispatcher", "1.4") {
		group("org.sonatype.plexus") {
			modules = [
				"plexus-sec-dispatcher"
			]
		}
	}
	library("Simple JNDI", "0.23.0") {
		group("com.github.h-thurow") {
			modules = [
				"simple-jndi"
			]
		}
	}
	library("Sisu", "2.6.0") {
		group("org.sonatype.sisu") {
			modules = [
				"sisu-inject-plexus"
			]
		}
	}
	library("Spock Framework", "2.3-groovy-4.0") {
		group("org.spockframework") {
			imports = [
				"spock-bom"
			]
		}
	}
	library("TestNG", "6.14.3") {
		group("org.testng") {
			modules = [
				"testng"
			]
		}
	}
	library("Spring Asciidoctor Extensions", "0.6.3") {
		group("io.spring.asciidoctor") {
			modules = [
				"spring-asciidoctor-extensions-spring-boot",
				"spring-asciidoctor-extensions-section-ids"
			]
		}
	}
}

dependencies {
	api(enforcedPlatform(project(":spring-boot-project:spring-boot-dependencies")))
}

tasks.withType(GenerateModuleMetadata).configureEach {
	// Internal module so enforced platform dependencies are OK
	suppressedValidationErrors.add('enforced-platform')
}
